@using Course.Models
@using Microsoft.AspNet.Identity;
@model Creative

@{
    ViewBag.Title = "Index";
}

<h2>@Resources.Resource.String1</h2>

@using (Html.BeginForm("Add", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label(nameof(Creative.Name), htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor(nameof(Creative.Name), new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-github" />
            </div>
        </div>
        
    </div>
    @Html.ValidationMessage(nameof(Course.Models.Creative.Name), "", new { @class = "text-danger" })
}

<hr />

@{ 
    ApplicationUser user = ViewBag.User;
}
@foreach (var userRating in user.UserCreatives)
{
    <div>@userRating.ApplicationUser.Id</div>
    <div>@userRating.Creative.Id</div>
    <div>@userRating.Value</div>
}

<div>
    <table class="table table-striped table-hover">
        <tr>
            <th>
                @Html.Label(nameof(Creative.Id))
            </th>
            <th>
                @Html.Label(nameof(Creative.Name))
            </th>
            <th>
                @Html.Label(nameof(Creative.ApplicationUser))
            </th>
            <th>
                @Html.Label(nameof(Creative.CreationTime))
            </th>
            <th>
                @Html.Label(nameof(Creative.LastEditTime))
            </th>
            <th>
                @Html.Label(nameof(Creative.Views))
            </th>
            <th>
                @Html.Label(nameof(Creative.Rating))
            </th>
            <th>
                @Html.Label(nameof(Creative.RatingsAmount))
            </th>
            <th>
                <p>Stars</p>
            </th>
            <th>
            </th>
            <th>
            </th>
        </tr>

        @foreach (Creative item in ViewBag.Creatives)
        {
            <tr class="success">
                <td>
                    @Html.DisplayFor(i => item.Id)
                </td>
                <td>
                    @Html.ActionLink(item.Name, "View", "User", new { id = item.Id }, null)
                </td>
                <td>
                    @Html.DisplayFor(i => item.ApplicationUser.Email)
                </td>
                <td>
                    @Html.DisplayFor(i => item.CreationTime)
                </td>
                <td>
                    @Html.DisplayFor(i => item.LastEditTime)
                </td>
                <td>
                    @Html.DisplayFor(i => item.Views)
                </td>
                <td>
                    <input class="itemRate" type="hidden" value="@item.Rating" />
                </td>
                <td>
                    
                    @Html.DisplayFor(i => item.RatingsAmount)
                </td>
                <td>
                    <div class="rateYo"></div>
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-success"})
                </td>
                <td>
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </table>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $(".rateYo").rateYo({
                starWidth: "40px",
                halfStar: true,
                onInit: function (rating, rateYoInstance) {
                    var rate = $(this).parent().parent().find('.itemRate').val().replace(',', '.');
                    console.log("" + rate);
                    $(this).rateYo("option", "rating", rate);
                    $(this).rateYo("option", "readOnly", true);
                }
            });
        });
        
    </script>
}




